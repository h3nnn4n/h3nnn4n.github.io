<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>creative on h3nnn4n</title>
    <link>https://h3nnn4n.me/tags/creative/</link>
    <description>Recent content in creative on h3nnn4n</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://h3nnn4n.me/tags/creative/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fracture</title>
      <link>https://h3nnn4n.me/post/fracture/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://h3nnn4n.me/post/fracture/</guid>
      <description>Previously I worked on cracks, which was a reinterpretation of fractures, by inconvergent.net. My goal originally was to eventually reproduce his work, as an exercise. I stopped halfway there with something that I was satisfied with even though I will want to reproduce it somewhere in the future. From the partially finished reimplementation, I had the idea of using a picture to get the colors to fill in the spaces. The intention was to recreate a picture using a mosaic-like pattern generated by the cracks/fractures.</description>
    </item>
    
    <item>
      <title>Cracks</title>
      <link>https://h3nnn4n.me/post/cracks/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://h3nnn4n.me/post/cracks/</guid>
      <description>Recently after looking at the works of inconvergent I decided to try to implement some of the techniques that he uses. This one here was inspired mostly by fractures. While his algorithm for this is something that I want to explore in the future, the work here is somewhat different from what he did.
My implementation works in a much simpler way. It generates a line equation with random coefficients and it picks a random point in this line.</description>
    </item>
    
    <item>
      <title>Dancing Room Zero</title>
      <link>https://h3nnn4n.me/post/dancing-room-zero/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://h3nnn4n.me/post/dancing-room-zero/</guid>
      <description>After writing a bit about the original Dancing with Friends and Enemies and my reimplementation I decided to try to implement something more close to the original. The first version used matter.js which added a different behavior style to the particles while being somewhat similar to the original.
I was satisfied with the results and glad to be able to keep its original behavior while adding my own touch to it.</description>
    </item>
    
    <item>
      <title>Dancing Room</title>
      <link>https://h3nnn4n.me/post/dancing-room/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://h3nnn4n.me/post/dancing-room/</guid>
      <description>A few years ago I found a thread on the Wolfram forum about swarm intelligence and emergent behavior, two things that I enjoy a lot. The title of the thread was something like &amp;lsquo;&amp;lsquo;Dancing With Friends and Enemies&amp;rsquo;&amp;rsquo; and it does not exist anymore as far as I can tell. However, I was able to find a copy here. The idea is pretty simple and below you can see my reinterpretation of it.</description>
    </item>
    
    <item>
      <title>Flow field</title>
      <link>https://h3nnn4n.me/post/flow/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://h3nnn4n.me/post/flow/</guid>
      <description>One of the most popular coding exercises out there is a Flow Field. The main idea behind that is to generate a vector field randomly, which is very often based on Perlin Noise. Then a set of particles are placed on the vector field and they are free to move along it, where the vector field determines the force placed upon the particle. To make things more dynamic and alive it is possible to vary the vector field over time.</description>
    </item>
    
  </channel>
</rss>
